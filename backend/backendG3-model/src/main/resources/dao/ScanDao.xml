<?xml version="1.0" encoding="UTF-8"?>
<JdbcEntitySetup
        xmlns="http://www.ontimize.com/schema/jdbc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.ontimize.com/schema/jdbc http://www.ontimize.com/schema/jdbc/ontimize-jdbc-dao.xsd"
        catalog="" schema="${mainschema}" table="scan"
        datasource="mainDataSource" sqlhandler="dbSQLStatementHandler">
    <DeleteKeys>
        <Column>id_scan_result</Column>
    </DeleteKeys>
    <UpdateKeys>
        <Column>id_scan_result</Column>
    </UpdateKeys>
    <GeneratedKey>id_scan_result</GeneratedKey>
    <Queries>
        <Query id="data">
            <!-- ORDER BY s.id_scan_result, s.delivery_note -->
            <Sentence>
                <![CDATA[
                WITH consulta as(
                    SELECT s.id_scan_result, s.delivery_note, t.plate, tra.trailer_plate, s.scan_date_in, s.scan_date_out, entrada.dev as dev_in, salida.dev as dev_out, theight, twidth, tlength, scan_volume_in, scan_volume_out, calculated_volume, sa.area_name, sa.id_area
                    FROM PUBLIC.scan s
                    LEFT JOIN PUBLIC.device as entrada ON
                       s.id_dev_in = entrada.id_device
                    LEFT JOIN PUBLIC.device as salida ON
                       s.id_dev_out = salida.id_device
                    LEFT JOIN PUBLIC.truck t ON
                       s.id_truck = t.id_truck
                    LEFT JOIN PUBLIC.trailer tra on
                        s.id_trailer = tra.id_trailer
                    LEFT JOIN PUBLIC.storage_area sa on
                        s.id_area = sa.id_area
                )
                SELECT #COLUMNS#
                FROM consulta
                 #WHERE#
                #ORDER#
                ]]>
            </Sentence>
        </Query>

        <!-- Consulta SQL para imprimir el volumen de carga -->
        <Query id="loadvolume">
            <Sentence>
                <![CDATA[
                WITH t_query as(
                    WITH date_range AS (
                        SELECT generate_series(
                            (SELECT MIN(date_trunc('day', scan_date_in)) FROM scan),
                            (SELECT MAX(date_trunc('day', scan_date_in)) FROM scan),
                            interval '1 day'
                        )::date AS fecha
                        )
                    SELECT
                        dr.fecha,
                        COALESCE(SUM(s.scan_volume_in), 0) AS volumen_entrada,
                        COALESCE(SUM(s.scan_volume_out)*(-1), 0) AS volumen_salida,
                        COALESCE(SUM(s.scan_volume_in), 0) - COALESCE(SUM(s.scan_volume_out), 0) AS balance
                    FROM date_range dr
                    LEFT JOIN scan s ON dr.fecha = date_trunc('day', s.scan_date_in)
                    GROUP BY dr.fecha
                    ORDER BY dr.fecha
                    )
                SELECT #COLUMNS#
                FROM t_query
                #WHERE#
                ]]>
            </Sentence>
        </Query>

        <Query id="groupByDate">
            <Sentence>
                <![CDATA[
                    WITH t_query AS (
                        WITH date_range AS (
                                SELECT
                                    generate_series( (SELECT MIN(scan_date_in)
                                FROM scan),
                                (
                                    SELECT MAX(scan_date_in)
                                    FROM scan
                                    ), '1 day' )::DATE AS generated_date
                                )
                        SELECT date_range.generated_date AS date, COALESCE(conteo1, 0) AS conteo_in, COALESCE(conteo2, 0) AS conteo_out
                        FROM date_range
                        LEFT JOIN (
                            SELECT date(scan_date_in) AS fecha, COUNT(*) AS conteo1
                            FROM scan sr
                            GROUP BY sr.id_dev_in, date(scan_date_in)
                        )
                        AS sr_count ON date_range.generated_date = sr_count.fecha
                        LEFT JOIN (
                            SELECT date(scan_date_out) AS fecha, COUNT(*) AS conteo2
                            FROM scan sr2
                            GROUP BY sr2.id_dev_out, date(scan_date_out)
                        )
                        AS sr_count2 ON date_range.generated_date = sr_count2.fecha
                        ORDER BY date_range.generated_date
                )
                SELECT #COLUMNS#
                FROM t_query
                #WHERE#
                ]]>
            </Sentence>
        </Query>
        <!-- Consulta SQL para imprimir los pedidos que estén en curso-->
        <Query id="deliveriesencurso">
            <Sentence>
                <!--
                 select s.scan_date_in as fecha_entrada, s.scan_date_out as fecha_salida, s.delivery_note as nº_pedido
                 from Public.scan s
                 where s.scan_date_out IS null
                 group by s.scan_date_in, s.scan_date_out, s.delivery_note
                 order by s.scan_date_in;
                -->
            </Sentence>
        </Query>
    </Queries>
</JdbcEntitySetup>